/* tslint:disable */
/* eslint-disable */
/**
 * Polyfea Browser application
 * This is the OpenAPI definition for the Polyfea endpoint serving the context information to the browser client. The client is requesting context information from the backend typically  when approaching the `<polyfea-context>` element. The context information is then used to render the UI of the application. 
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContextArea } from './ContextArea';
import {
    ContextAreaFromJSON,
    ContextAreaFromJSONTyped,
    ContextAreaToJSON,
} from './ContextArea';

/**
 * Specification of the static configuration of the context area with specific name and path regex.
 * 
 * @export
 * @interface StaticConfigArea
 */
export interface StaticConfigArea {
    /**
     * Name of the context area.
     * 
     * @type {string}
     * @memberof StaticConfigArea
     */
    name: string;
    /**
     * The regular expression to match the path relative to base href to apply this context area. 
     * If path is not provided then context area specification applies on any path. In case of the conflicts
     * the first matching context area is used.
     * 
     * @type {string}
     * @memberof StaticConfigArea
     */
    path?: string;
    /**
     * 
     * @type {ContextArea}
     * @memberof StaticConfigArea
     */
    contextArea?: ContextArea;
}

/**
 * Check if a given object implements the StaticConfigArea interface.
 */
export function instanceOfStaticConfigArea(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function StaticConfigAreaFromJSON(json: any): StaticConfigArea {
    return StaticConfigAreaFromJSONTyped(json, false);
}

export function StaticConfigAreaFromJSONTyped(json: any, ignoreDiscriminator: boolean): StaticConfigArea {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'contextArea': !exists(json, 'contextArea') ? undefined : ContextAreaFromJSON(json['contextArea']),
    };
}

export function StaticConfigAreaToJSON(value?: StaticConfigArea | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'path': value.path,
        'contextArea': ContextAreaToJSON(value.contextArea),
    };
}

